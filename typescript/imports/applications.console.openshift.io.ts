// generated by cdk8s
import { ApiObject, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * ConsoleApplication is the Schema for the consoleapplications API
 *
 * @schema ConsoleApplication
 */
export class ConsoleApplication extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ConsoleApplication"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'applications.console.openshift.io/v1alpha1',
    kind: 'ConsoleApplication',
  }

  /**
   * Renders a Kubernetes manifest for "ConsoleApplication".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ConsoleApplicationProps = {}): any {
    return {
      ...ConsoleApplication.GVK,
      ...props,
    };
  }

  /**
   * Defines a "ConsoleApplication" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ConsoleApplicationProps = {}) {
    super(scope, id, ConsoleApplication.manifest(props));
  }
}

/**
 * ConsoleApplication is the Schema for the consoleapplications API
 *
 * @schema ConsoleApplication
 */
export interface ConsoleApplicationProps {
  /**
   * @schema ConsoleApplication#metadata
   */
  readonly metadata?: any;

  /**
   * ConsoleApplicationSpec defines the desired state of ConsoleApplication
   *
   * @schema ConsoleApplication#spec
   */
  readonly spec?: ConsoleApplicationSpec;

}

/**
 * ConsoleApplicationSpec defines the desired state of ConsoleApplication
 *
 * @schema ConsoleApplicationSpec
 */
export interface ConsoleApplicationSpec {
  /**
   * @schema ConsoleApplicationSpec#category
   */
  readonly category?: string;

  /**
   * @schema ConsoleApplicationSpec#comingSoon
   */
  readonly comingSoon?: string;

  /**
   * @schema ConsoleApplicationSpec#csvName
   */
  readonly csvName?: string;

  /**
   * @schema ConsoleApplicationSpec#description
   */
  readonly description?: string;

  /**
   * @schema ConsoleApplicationSpec#displayName
   */
  readonly displayName?: string;

  /**
   * @schema ConsoleApplicationSpec#docsLink
   */
  readonly docsLink?: string;

  /**
   * @schema ConsoleApplicationSpec#enable
   */
  readonly enable?: ConsoleApplicationSpecEnable;

  /**
   * @schema ConsoleApplicationSpec#endPoint
   */
  readonly endPoint?: string;

  /**
   * @schema ConsoleApplicationSpec#featureFlag
   */
  readonly featureFlag?: string;

  /**
   * @schema ConsoleApplicationSpec#getStartedLink
   */
  readonly getStartedLink?: string;

  /**
   * @schema ConsoleApplicationSpec#img
   */
  readonly img?: string;

  /**
   * @schema ConsoleApplicationSpec#isEnabled
   */
  readonly isEnabled?: boolean;

  /**
   * @schema ConsoleApplicationSpec#kfdefApplications
   */
  readonly kfdefApplications: string[];

  /**
   * @schema ConsoleApplicationSpec#link
   */
  readonly link?: string;

  /**
   * @schema ConsoleApplicationSpec#provider
   */
  readonly provider?: string;

  /**
   * @schema ConsoleApplicationSpec#quickStart
   */
  readonly quickStart?: string;

  /**
   * @schema ConsoleApplicationSpec#route
   */
  readonly route?: string;

  /**
   * @schema ConsoleApplicationSpec#routeNamespace
   */
  readonly routeNamespace?: string;

  /**
   * @schema ConsoleApplicationSpec#routeSuffix
   */
  readonly routeSuffix?: string;

  /**
   * @schema ConsoleApplicationSpec#serviceName
   */
  readonly serviceName?: string;

  /**
   * @schema ConsoleApplicationSpec#support
   */
  readonly support?: string;

}

/**
 * @schema ConsoleApplicationSpecEnable
 */
export interface ConsoleApplicationSpecEnable {
  /**
   * @schema ConsoleApplicationSpecEnable#actionLabel
   */
  readonly actionLabel?: string;

  /**
   * @schema ConsoleApplicationSpecEnable#description
   */
  readonly description?: string;

  /**
   * @schema ConsoleApplicationSpecEnable#title
   */
  readonly title?: string;

  /**
   * @schema ConsoleApplicationSpecEnable#validationConfigMap
   */
  readonly validationConfigMap?: string;

  /**
   * @schema ConsoleApplicationSpecEnable#validationJob
   */
  readonly validationJob?: string;

  /**
   * @schema ConsoleApplicationSpecEnable#validationSecret
   */
  readonly validationSecret?: string;

  /**
   * @schema ConsoleApplicationSpecEnable#variableDisplayText
   */
  readonly variableDisplayText?: { [key: string]: string };

  /**
   * @schema ConsoleApplicationSpecEnable#variableHelpText
   */
  readonly variableHelpText?: { [key: string]: string };

  /**
   * @schema ConsoleApplicationSpecEnable#variables
   */
  readonly variables?: { [key: string]: string };

}

